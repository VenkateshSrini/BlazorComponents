@implements IQuizControl
<table width="100%" style="border-color:black;border-style:solid;border-width:1px">
    <tr style="border-bottom: 1px solid black">
        <td width="20%">
            <label for="Questions">Question</label>
        </td>
        <td>
            <p>@QuestionSet.QuestionText</p>
        </td>
    </tr>
    <tr style="border-bottom: 1px solid black">
        <td colspan="2" style="background-color:blue;">
            <font color="White">
                Please choose only one that applies
            </font>
        </td>
    </tr>
    @foreach (var answer in QuestionSet?.Answers)
    {
        <tr>
            <td colspan="2">
                <div>
                    <input type="radio" name="answerGrp" id="@answer.AnswerKey" value="@answer.AnswerKey"
                           @onchange="ManageUserAnswer" />
                    <label for="@answer.AnswerKey">@answer.AnswerText</label>
                </div>
            </td>
        </tr>
    }
    <tr style="border-bottom: 1px solid black">
        <td>
            Result
        </td>
        <td>
            @ResultCaption
        </td>
    </tr>
    <tr>
        <td>
            Correct Answer
        </td>
        <td>
            @correctAnswer
        </td>
    </tr>
    <tr>
        <td colspan="2">
            <button class="btn btn-primary"
                    @onclick="@(async e => await ValidateSubmit(buttonCaption))">
                @buttonCaption
            </button>
        </td>
    </tr>
</table>

@code {
    [Parameter]
    public QAndA QuestionSet { set; get; }
    [Parameter]
    public string NextQuestionOrDone { set; get; }
    private string buttonCaption = "Validate";
    bool ResultState;
    string ResultCaption;
    string correctAnswer;
    [Parameter]
    public EventCallback<bool> OnCompleted { get; set; }
    private string UserAnswer;
    private void ManageUserAnswer(ChangeEventArgs args)
    {

        UserAnswer = args.Value.ToString();
    }
    private async Task ValidateSubmit(string caption)
    {
        if (caption == "Validate")
        {

            ResultState = (string.Compare(UserAnswer, QuestionSet.AnswerKeys[0]) == 0);
            ResultCaption = (ResultState) ? "Correct" : "Wrong";
            buttonCaption = NextQuestionOrDone;
            foreach (var anskey in QuestionSet?.AnswerKeys)
            {
                correctAnswer += QuestionSet?.Answers.FirstOrDefault(ans => ans.AnswerKey == anskey)?.AnswerText;
            }
        }
        else if (caption == NextQuestionOrDone)
        {
            await OnCompleted.InvokeAsync(ResultState);
        }
    }

}
