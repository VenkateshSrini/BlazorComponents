@page "/Audioplayer/{key}"
@using System.Threading.Tasks;
@using BlazorComponent.Client.InterApp;
@using System.Timers;
@inject IJSRuntime jsRuntime;
@inject BlazorComponent.Client.InterApp.Services.IStateManagement viewState;
@implements IDisposable;
@implements IAsyncDisposable;

<div>
    <audio id="audio_plyr"
           class="video-js vjs-default-skin"
           width="600" height="600"
           controls
           data-setup="{}">
        <source src="@audioSource" type="@audioType" />

    </audio>
</div>
@code {
    [Parameter]
    public string Key { get; set; }
    public string audioSource { get; set; }
    private Timer timer = new Timer(1000);

    public string audioType { get; set; }
    protected override void OnInitialized()
    {
        audioSource = viewState.GetState<string>("audioURL");
        audioType = viewState.GetState<string>("audioType");
        timer.Elapsed += async (sender, e) => await HandleTimer(sender, e);
        timer.Enabled = true;
        timer.Start();

    }
    public async Task HandleTimer(object source, ElapsedEventArgs e)
    {
        await jsRuntime.InvokeVoidAsync("getVideoDetails", "audio_plyr", Key);
    }
    public async ValueTask DisposeAsync()
    {
        await jsRuntime.InvokeVoidAsync("disposePlayer", "audio_plyr");
        Dispose();

    }
    public void Dispose()
    {

        timer.Dispose();
        GC.SuppressFinalize(this);

    }
}

